openapi: 3.0.3
info:
  title: SemantOS Control REST API
  version: "1.0.0"
  description: |
    REST 매핑 규칙 (gRPC → REST)
    - GetRecommendations(TelemetrySnapshot) → POST /v1/recommendations
    - ApplyConfiguration(TuningRecommendation) → POST /v1/apply
    - LogOutcome(OptimizationTrace) → POST /v1/logs/outcomes

servers:
  - url: http://localhost:7002
    description: Example server (change to your gateway or service host)
  - url: /
    description: Relative server (behind reverse proxy)

tags:
  - name: control
    description: Core control-loop endpoints

paths:
  /v1/recommendations:
    post:
      tags: [control]
      operationId: getRecommendations
      summary: 텔레메트리 스냅샷을 기반으로 튜닝 권장 사항 목록을 요청합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TelemetrySnapshot"
            examples:
              example:
                value:
                  host_id: "node-a"
                  metrics:
                    cpu_run_queue_len: 3
                    p95_latency_ms: 18.7
                  current_knobs:
                    "vm.swappiness": "1"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TuningRecommendationList"
              examples:
                example:
                  value:
                    recommendations:
                      - knob_name: "sched_min_granularity_ns"
                        proposed_value: "2000000"
                        rationale: "RQ latency high; reduce granularity to lower tail."
                        uncertainty_score: 0.32
                        predicted_impact:
                          latency_delta: -12.5
                          throughput_delta: 0.0
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"

  /v1/apply:
    post:
      tags: [control]
      operationId: applyConfiguration
      summary: Safety Runtime이 권장 사항을 시스템에 적용(또는 롤백)합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TuningRecommendation"
            examples:
              example:
                value:
                  knob_name: "sched_min_granularity_ns"
                  proposed_value: "2000000"
                  rationale: "Lower granularity to reduce tail latency."
                  uncertainty_score: 0.42
                  predicted_impact:
                    latency_delta: -10.0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplyResponse"
              examples:
                applied:
                  value:
                    success: true
                    status_message: "applied via staged rollout (canary→ramp→full)"
                    audit_log_id: "audit-2025-10-05T12:34:56Z-001"
        "400":
          $ref: "#/components/responses/BadRequest"
        "409":
          description: Conflict (e.g., policy violation or guardrail triggered)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplyResponse"
              examples:
                rolled_back:
                  value:
                    success: false
                    status_message: "rolled back (u ≥ τ)"
                    audit_log_id: "audit-2025-10-05T12:34:56Z-002"
        "500":
          $ref: "#/components/responses/InternalError"

  /v1/logs/outcomes:
    post:
      tags: [control]
      operationId: logOutcome
      summary: 최적화 결과를 KB에 기록하여 지속 학습에 사용합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OptimizationTrace"
            examples:
              example:
                value:
                  initial_state:
                    host_id: "node-a"
                    metrics:
                      p95_latency_ms: 22.0
                      cpu_run_queue_len: 4
                    current_knobs:
                      "sched_min_granularity_ns": "2500000"
                  action:
                    knob_name: "sched_min_granularity_ns"
                    proposed_value: "2000000"
                    rationale: "reduce tail latency"
                    uncertainty_score: 0.42
                    predicted_impact:
                      latency_delta: -10.0
                  outcome_state:
                    host_id: "node-a"
                    metrics:
                      p95_latency_ms: 19.3
                      cpu_run_queue_len: 3
                    current_knobs:
                      "sched_min_granularity_ns": "2000000"
                  slo_violation: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogResponse"
              examples:
                example:
                  value:
                    success: true
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"

  /health:
    get:
      summary: Health check
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                example:
                  ok: true

components:
  schemas:
    TelemetrySnapshot:
      type: object
      required: [host_id]
      properties:
        host_id:
          type: string
          description: 호스트 식별자
          example: "node-a"
        metrics:
          type: object
          description: 실시간 수치 메트릭 맵 (예: cpu_run_queue_len, p95_latency_ms)
          additionalProperties:
            type: number
            format: double
          example:
            cpu_run_queue_len: 3
            p95_latency_ms: 18.7
        current_knobs:
          type: object
          description: 현재 커널 튜너블 맵
          additionalProperties:
            type: string
          example:
            "vm.swappiness": "1"
            "sched_min_granularity_ns": "2500000"

    TuningRecommendation:
      type: object
      required: [knob_name, proposed_value, rationale, uncertainty_score]
      properties:
        knob_name:
          type: string
          description: 커널 매개변수 이름
          example: "sched_min_granularity_ns"
        proposed_value:
          type: string
          description: 제안 값(문자열로 유지: 단위/표기 다양성 수용)
          example: "2000000"
        rationale:
          type: string
          description: 자연어 설명(추론 근거)
          example: "RQ latency high; reduce granularity to lower tail."
        uncertainty_score:
          type: number
          format: double
          description: 추론의 불확실성 (0.0~1.0)
          example: 0.32
        predicted_impact:
          type: object
          description: 예상 성능 영향 맵 (예: latency_delta, throughput_delta)
          additionalProperties:
            type: number
            format: double
          example:
            latency_delta: -12.5
            throughput_delta: 0.0

    TuningRecommendationList:
      type: object
      required: [recommendations]
      properties:
        recommendations:
          type: array
          items:
            $ref: "#/components/schemas/TuningRecommendation"

    ApplyResponse:
      type: object
      required: [success]
      properties:
        success:
          type: boolean
          description: 적용 성공 여부
          example: true
        status_message:
          type: string
          description: 상세 상태 메시지(롤백/정책 위반 등)
          example: "applied via staged rollout (canary→ramp→full)"
        audit_log_id:
          type: string
          description: 감사 로그 식별자
          example: "audit-2025-10-05T12:34:56Z-001"

    OptimizationTrace:
      type: object
      required: [initial_state, action, outcome_state]
      properties:
        initial_state:
          $ref: "#/components/schemas/TelemetrySnapshot"
        action:
          $ref: "#/components/schemas/TuningRecommendation"
        outcome_state:
          $ref: "#/components/schemas/TelemetrySnapshot"
        slo_violation:
          type: boolean
          description: SLO 위반 여부
          example: false

    LogResponse:
      type: object
      required: [success]
      properties:
        success:
          type: boolean
          example: true

    Error:
      type: object
      properties:
        code:
          type: string
          example: "BAD_REQUEST"
        message:
          type: string
          example: "Invalid field: metrics.cpu_run_queue_len must be >= 0"

  responses:
    BadRequest:
      description: 잘못된 요청
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            example:
              value:
                code: "BAD_REQUEST"
                message: "Invalid payload"
    InternalError:
      description: 서버 내부 오류
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            example:
              value:
                code: "INTERNAL"
                message: "Unexpected error"