// @generated by protoc-gen-grpc-web. Do not edit!

import * as grpcWeb from 'grpc-web';
import * as semantos_pb from './semantos_pb';

export class SemantosControlClient {
  constructor(hostname: string, credentials?: null | { [index: string]: string; }, options?: null | { [index: string]: any; });

  // 1. Reasoner에 권장 사항을 요청 (Safety Runtime API를 통해 라우팅될 수 있음)
  getRecommendations(
    request: semantos_pb.TelemetrySnapshot,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: semantos_pb.TuningRecommendationList) => void
  ): grpcWeb.ClientReadableStream<semantos_pb.TuningRecommendationList>;

  // 2. 운영자의 승인을 받아 구성을 적용
  applyConfiguration(
    request: semantos_pb.TuningRecommendation,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: semantos_pb.ApplyResponse) => void
  ): grpcWeb.ClientReadableStream<semantos_pb.ApplyResponse>;

  // 3. KB에 로깅 (운영자가 거부했을 때 '실패' 트레이스를 기록할 수 있음)
  logOutcome(
    request: semantos_pb.OptimizationTrace,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: semantos_pb.LogResponse) => void
  ): grpcWeb.ClientReadableStream<semantos_pb.LogResponse>;
}