# /usr/share/nginx/html 의 정적파일을 서빙하고,
# /grpc/ -> grpc-web-proxy:8080 (gRPC-Web 변환)
# /api/  -> reasoner:8000     (FastAPI REST)

server {
  listen 8080 default_server;
  server_name _;

  # 정적 파일
  root /usr/share/nginx/html;
  index index.html;

  # 기본 보안/성능 헤더(선택)
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options SAMEORIGIN;
  add_header X-XSS-Protection "1; mode=block";

  # 정적 라우팅 (Vue SPA)
  location / {
    try_files $uri $uri/ /index.html;
  }

  # REST API -> Reasoner (FastAPI @ 8000)
  location /api/ {
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://reasoner:8000/;
  }

  # gRPC-Web -> grpcwebproxy (변환) 
  # 프런트엔드에서 /grpc/* 로 보내면 여기로 내려옴
  location /grpc/ {
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # grpcwebproxy는 HTTP(S)로 gRPC-Web 요청을 받아 내부에서 gRPC로 변환
    proxy_pass http://grpc-web-proxy:8080/;
  }

  # CORS (필요 시 활성화)
  # add_header 'Access-Control-Allow-Origin' '*' always;
  # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
  # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
  # if ($request_method = 'OPTIONS') { return 204; }
}

