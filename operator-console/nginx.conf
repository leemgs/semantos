# /etc/nginx/conf.d/default.conf 로 복사되어 사용됨
# (우리 Dockerfile이 이렇게 배치하도록 구성됨)

# Envoy(gRPC-Web 게이트웨이) 업스트림 정의
upstream envoy_gateway {
    server grpc-web-gateway:18080;
    keepalive 32;
}

server {
  listen 80 default_server;
  server_name _;

  # --- 정적 파일 (Vite build 산출물) ---
  root /usr/share/nginx/html;
  index index.html;

  location / {
    try_files $uri $uri/ /index.html;
  }

  # --- gRPC-Web: 브라우저 -> Nginx -> Envoy ---
  # 예: /grpc/reasoner, /grpc/safety ...
  location /grpc/ {
    proxy_pass http://envoy_gateway;

    # gRPC-Web은 HTTP/1.1 업그레이드/헤더가 중요
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;

    # 원 요청 정보 전달
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Origin $http_origin;

    # 타임아웃/버퍼 (스트리밍 안정성)
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;
    send_timeout 300s;
    proxy_buffering off;         # gRPC 스트림 버퍼링 금지
    chunked_transfer_encoding off;

    # CORS (개발 편의; 필요시 Origin 제한)
    add_header Access-Control-Allow-Origin "$http_origin" always;
    add_header Vary "Origin" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Allow-Headers "content-type,x-grpc-web,x-user-agent,grpc-timeout,authorization" always;
    add_header Access-Control-Expose-Headers "grpc-status,grpc-message,grpc-status-details-bin" always;

    # Preflight
    if ($request_method = OPTIONS) {
      add_header Access-Control-Allow-Methods "GET,POST,OPTIONS" always;
      add_header Access-Control-Max-Age 1728000 always;
      add_header Content-Type "text/plain; charset=UTF-8" always;
      add_header Content-Length 0 always;
      return 204;
    }
  }

  # 선택: 헬스체크
  location = /healthz {
    return 200 'ok';
    add_header Content-Type text/plain;
  }
}

